import asyncio
import logging
import os
import requests
import json
from datetime import datetime, timedelta
from typing import Dict, Any, List
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command, StateFilter
from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, 
                          InlineKeyboardButton)
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "8326095098:AAHVE8r5qaS8V2raYQgvi1Gz9dPEbUZ9ll8")
HUGGINGFACE_TOKEN = os.getenv("HUGGINGFACE_API_TOKEN")

# –ù–ê–°–¢–†–û–ô–ö–ò –ö–ê–ù–ê–õ–û–í –î–õ–Ø –ü–û–î–ü–ò–°–ö–ò (–¢–í–û–ò –ö–ê–ù–ê–õ–´!)
REQUIRED_CHANNELS = [
    {
        "id": os.getenv("CHANNEL_1", "@kanal1kkal"), 
        "url": "https://t.me/kanal1kkal", 
        "name": "üèõÔ∏è Artemius AI",
        "description": "–ì–ª–∞–≤–Ω—ã–π –∫–∞–Ω–∞–ª –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"
    },
    {
        "id": os.getenv("CHANNEL_2", "@kanal2kkal"), 
        "url": "https://t.me/kanal2kkal", 
        "name": "üì¢ AI –ù–æ–≤–æ—Å—Ç–∏",
        "description": "–ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è AI —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π"
    }
]

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM
class BotStates(StatesGroup):
    waiting_for_text = State()
    waiting_for_image_prompt = State()
    waiting_for_music_prompt = State()
    waiting_for_video_prompt = State()
    waiting_for_document = State()

# –õ–ò–ú–ò–¢–´: –º–∞–ª—ã–µ –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞, —Ö–æ—Ä–æ—à–∏–µ –¥–ª—è VIP
FREE_LIMITS = {
    'chat': 3,         # –¢–æ–ª—å–∫–æ 3 –¥–∏–∞–ª–æ–≥–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
    'images': 1,       # –¢–æ–ª—å–∫–æ 1 –∫–∞—Ä—Ç–∏–Ω–∫–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
    'music': 1,        # –¢–æ–ª—å–∫–æ 1 –º—É–∑—ã–∫–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
    'video': 1,        # –¢–æ–ª—å–∫–æ 1 –≤–∏–¥–µ–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
    'documents': 2     # –¢–æ–ª—å–∫–æ 2 –¥–æ–∫—É–º–µ–Ω—Ç–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏
}

VIP_LIMITS = {         # VIP –ª–∏–º–∏—Ç—ã –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ –Ω–∞ –û–ë–ê –∫–∞–Ω–∞–ª–∞
    'chat': 25,        # 25 –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è VIP
    'images': 10,      # 10 –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è VIP
    'music': 5,        # 5 –∫–æ–º–ø–æ–∑–∏—Ü–∏–π –¥–ª—è VIP
    'video': 3,        # 3 –≤–∏–¥–µ–æ –¥–ª—è VIP
    'documents': 8     # 8 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è VIP
}

# –ö—ç—à —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
subscription_cache = {}
user_stats = {}
user_limits = {}

async def check_subscription(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –í–°–ï –∫–∞–Ω–∞–ª—ã (–Ω—É–∂–Ω—ã –≤—Å–µ –¥–ª—è VIP)"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à (–¥–µ–π—Å—Ç–≤—É–µ—Ç 5 –º–∏–Ω—É—Ç)
        now = datetime.now()
        if user_id in subscription_cache:
            cached_time, is_subscribed = subscription_cache[user_id]
            if (now - cached_time).total_seconds() < 300:  # 5 –º–∏–Ω—É—Ç
                return is_subscribed

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
        all_subscribed = True
        for channel in REQUIRED_CHANNELS:
            try:
                member = await bot.get_chat_member(channel["id"], user_id)
                if member.status not in ['member', 'administrator', 'creator']:
                    all_subscribed = False
                    break
            except:
                all_subscribed = False
                break

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        subscription_cache[user_id] = (now, all_subscribed)
        return all_subscribed

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

async def check_individual_subscriptions(user_id: int) -> Dict[str, bool]:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª –æ—Ç–¥–µ–ª—å–Ω–æ"""
    try:
        subscriptions = {}
        for channel in REQUIRED_CHANNELS:
            try:
                member = await bot.get_chat_member(channel["id"], user_id)
                subscriptions[channel["id"]] = member.status in ['member', 'administrator', 'creator']
            except:
                subscriptions[channel["id"]] = False
        return subscriptions
    except:
        return {ch["id"]: False for ch in REQUIRED_CHANNELS}

def get_user_stats(user_id: int) -> dict:
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id not in user_stats:
        user_stats[user_id] = {
            'total_messages': 0,
            'total_images': 0,
            'total_music': 0,
            'total_videos': 0,
            'total_documents': 0,
            'first_seen': datetime.now().isoformat()
        }
    return user_stats[user_id]

def get_daily_usage(user_id: int) -> dict:
    """–ü–æ–ª—É—á–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è"""
    today = datetime.now().date().isoformat()
    if user_id not in user_limits:
        user_limits[user_id] = {}
    if today not in user_limits[user_id]:
        user_limits[user_id][today] = {
            'chat': 0,
            'images': 0,
            'music': 0,
            'video': 0,
            'documents': 0
        }
    return user_limits[user_id][today]

async def check_limit(user_id: int, feature: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∏–º–∏—Ç —Å —É—á–µ—Ç–æ–º VIP —Å—Ç–∞—Ç—É—Å–∞"""
    is_vip = await check_subscription(user_id)
    daily = get_daily_usage(user_id)

    # –í—ã–±–∏—Ä–∞–µ–º –ª–∏–º–∏—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç VIP —Å—Ç–∞—Ç—É—Å–∞
    limits = VIP_LIMITS if is_vip else FREE_LIMITS

    return daily[feature] < limits[feature]

def use_feature(user_id: int, feature: str):
    """–ó–∞—Å—á–∏—Ç–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏"""
    daily = get_daily_usage(user_id)
    daily[feature] += 1

    stats = get_user_stats(user_id)
    stats[f'total_{feature}'] = stats.get(f'total_{feature}', 0) + 1

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
async def get_main_menu(user_id: int):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ç–∞—Ç—É—Å–∞"""
    is_vip = await check_subscription(user_id)
    status_emoji = "‚≠ê" if is_vip else "üîí"
    status_text = "VIP —Ä–µ–∂–∏–º" if is_vip else "–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø"

    keyboard = [
        [KeyboardButton(text="üí¨ –ß–∞—Ç —Å Artemius"), KeyboardButton(text="üé® –°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É")],
        [KeyboardButton(text="üéµ –°–æ–∑–¥–∞—Ç—å –ø–µ—Å–Ω—é"), KeyboardButton(text="üé¨ –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ")],
        [KeyboardButton(text="üìÑ –î–æ–∫—É–º–µ–Ω—Ç"), KeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")],
        [KeyboardButton(text=f"{status_emoji} {status_text}"), KeyboardButton(text="üì¢ –ü–æ–ª—É—á–∏—Ç—å VIP")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

async def get_subscription_menu(user_id: int):
    """–£–ª—É—á—à–µ–Ω–Ω–æ–µ –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏ —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
    individual_subs = await check_individual_subscriptions(user_id)

    keyboard = []

    # –û—Ç–¥–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º
    for channel in REQUIRED_CHANNELS:
        is_subscribed = individual_subs.get(channel["id"], False)
        status_emoji = "‚úÖ" if is_subscribed else "üì¢"
        status_text = "–ü–æ–¥–ø–∏—Å–∞–Ω" if is_subscribed else "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"

        keyboard.append([InlineKeyboardButton(
            text=f"{status_emoji} {channel['name']} ‚Ä¢ {status_text}", 
            url=channel["url"]
        )])

    # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    keyboard.append([InlineKeyboardButton(text="‚ûñ ‚ûñ ‚ûñ ‚ûñ ‚ûñ", callback_data="separator")])

    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫
    keyboard.append([InlineKeyboardButton(
        text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å VIP", 
        callback_data="check_subscriptions"
    )])

    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞
    keyboard.append([InlineKeyboardButton(
        text="‚è≠Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –±–∞–∑–æ–≤—ã–º –¥–æ—Å—Ç—É–ø–æ–º", 
        callback_data="skip_subscriptions"
    )])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_back_menu():
    """–ú–µ–Ω—é –≤–æ–∑–≤—Ä–∞—Ç–∞"""
    keyboard = [[KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
@dp.message(Command("start"))
async def start_handler(message: types.Message, state: FSMContext):
    """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ–¥–ø–∏—Å–∫–∏"""
    await state.clear()
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    if is_vip:
        # VIP –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        welcome_text = f"""üèõÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!**

‚≠ê **VIP –°–¢–ê–¢–£–° –ê–ö–¢–ò–í–ï–ù!**
–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã!

üöÄ **–í–ê–®–ò VIP-–õ–ò–ú–ò–¢–´:**
üí¨ –î–∏–∞–ª–æ–≥–∏ ‚Äî **{VIP_LIMITS['chat']} –≤ –¥–µ–Ω—å**
üé® –ö–∞—Ä—Ç–∏–Ω–∫–∏ ‚Äî **{VIP_LIMITS['images']} –≤ –¥–µ–Ω—å**  
üéµ –ú—É–∑—ã–∫–∞ ‚Äî **{VIP_LIMITS['music']} –≤ –¥–µ–Ω—å**
üé¨ –í–∏–¥–µ–æ ‚Äî **{VIP_LIMITS['video']} –≤ –¥–µ–Ω—å**
üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã ‚Äî **{VIP_LIMITS['documents']} –≤ –¥–µ–Ω—å**

‚ú® **–ü–µ—Ä–µ–¥–æ–≤—ã–µ AI —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**
‚Ä¢ DeepSeek V3 –¥–ª—è —É–º–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
‚Ä¢ Stable Diffusion –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ MusicGen –¥–ª—è –º—É–∑—ã–∫–∏
‚Ä¢ Video AI –¥–ª—è —Ä–æ–ª–∏–∫–æ–≤
‚Ä¢ TrOCR –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å VIP-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏! üéØ"""

        reply_markup = await get_main_menu(user_id)

    else:
        # –û–±—ã—á–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –ø—Ä–∏–∑—ã–≤–æ–º –∫ –ø–æ–¥–ø–∏—Å–∫–µ
        welcome_text = f"""üèõÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Artemius AI!**

ü§ñ –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!

üîí **–í–ê–®–ò –¢–ï–ö–£–©–ò–ï –õ–ò–ú–ò–¢–´ (–±–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø):**
üí¨ –î–∏–∞–ª–æ–≥–∏ ‚Äî **{FREE_LIMITS['chat']} –≤ –¥–µ–Ω—å**
üé® –ö–∞—Ä—Ç–∏–Ω–∫–∏ ‚Äî **{FREE_LIMITS['images']} –≤ –¥–µ–Ω—å**  
üéµ –ú—É–∑—ã–∫–∞ ‚Äî **{FREE_LIMITS['music']} –≤ –¥–µ–Ω—å**
üé¨ –í–∏–¥–µ–æ ‚Äî **{FREE_LIMITS['video']} –≤ –¥–µ–Ω—å**
üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã ‚Äî **{FREE_LIMITS['documents']} –≤ –¥–µ–Ω—å**

‚≠ê **–•–û–¢–ò–¢–ï –ü–û–õ–£–ß–ò–¢–¨ VIP –°–¢–ê–¢–£–°?**
–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –∏ –ø–æ–ª—É—á–∏—Ç–µ:

üí¨ **{VIP_LIMITS['chat']} –¥–∏–∞–ª–æ–≥–æ–≤** –≤ –¥–µ–Ω—å (—Å–µ–π—á–∞—Å {FREE_LIMITS['chat']})
üé® **{VIP_LIMITS['images']} –∫–∞—Ä—Ç–∏–Ω–æ–∫** –≤ –¥–µ–Ω—å (—Å–µ–π—á–∞—Å {FREE_LIMITS['images']})
üéµ **{VIP_LIMITS['music']} –∫–æ–º–ø–æ–∑–∏—Ü–∏–π** –≤ –¥–µ–Ω—å (—Å–µ–π—á–∞—Å {FREE_LIMITS['music']})
üé¨ **{VIP_LIMITS['video']} –≤–∏–¥–µ–æ** –≤ –¥–µ–Ω—å (—Å–µ–π—á–∞—Å {FREE_LIMITS['video']})
üìÑ **{VIP_LIMITS['documents']} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤** –≤ –¥–µ–Ω—å (—Å–µ–π—á–∞—Å {FREE_LIMITS['documents']})

üöÄ **–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –æ–±–∞ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è VIP!**"""

        reply_markup = await get_subscription_menu(user_id)

    await message.answer(welcome_text, reply_markup=reply_markup, parse_mode="Markdown")

# –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –∏—Å—á–µ—Ä–ø–∞–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤
async def show_limit_exhausted(message: types.Message, feature: str):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏—Å—á–µ—Ä–ø–∞–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ —Å —á–µ—Ç–∫–∏–º –ø—Ä–∏–∑—ã–≤–æ–º –∫ –ø–æ–¥–ø–∏—Å–∫–µ"""
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    feature_names = {
        'chat': '–¥–∏–∞–ª–æ–≥–æ–≤ —Å Artemius',
        'images': '–≥–µ–Ω–µ—Ä–∞—Ü–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
        'music': '—Å–æ–∑–¥–∞–Ω–∏—è –º—É–∑—ã–∫–∏', 
        'video': '–≤–∏–¥–µ–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
        'documents': '–∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'
    }

    feature_emoji = {
        'chat': 'üí¨',
        'images': 'üé®',
        'music': 'üéµ',
        'video': 'üé¨',
        'documents': 'üìÑ'
    }

    current_limit = VIP_LIMITS[feature] if is_vip else FREE_LIMITS[feature]
    vip_limit = VIP_LIMITS[feature]

    if is_vip:
        # –î–ª—è VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        text = f"""üö´ **–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç {feature_names[feature]}!**

‚≠ê **VIP —Å—Ç–∞—Ç—É—Å:** {current_limit} –≤ –¥–µ–Ω—å
‚è∞ **–õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤—è—Ç—Å—è:** –∑–∞–≤—Ç—Ä–∞ –≤ 00:00 –ú–°–ö

üí° –ê –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ Artemius!"""

        await message.answer(text, parse_mode="Markdown")

    else:
        # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –ø—Ä–∏–∑—ã–≤ –∫ –ø–æ–¥–ø–∏—Å–∫–µ  
        increase = vip_limit - current_limit

        text = f"""üö´ **–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç {feature_names[feature]}!**

{feature_emoji[feature]} **–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç:** {current_limit} –≤ –¥–µ–Ω—å

‚≠ê **–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã!**

üéØ **VIP –ª–∏–º–∏—Ç:** {vip_limit} –≤ –¥–µ–Ω—å (+{increase} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ!)

üöÄ **–í–°–ï VIP –ë–û–ù–£–°–´:**
üí¨ {VIP_LIMITS['chat']} –¥–∏–∞–ª–æ–≥–æ–≤ (+{VIP_LIMITS['chat'] - FREE_LIMITS['chat']})
üé® {VIP_LIMITS['images']} –∫–∞—Ä—Ç–∏–Ω–æ–∫ (+{VIP_LIMITS['images'] - FREE_LIMITS['images']})
üéµ {VIP_LIMITS['music']} –∫–æ–º–ø–æ–∑–∏—Ü–∏–π (+{VIP_LIMITS['music'] - FREE_LIMITS['music']})
üé¨ {VIP_LIMITS['video']} –≤–∏–¥–µ–æ (+{VIP_LIMITS['video'] - FREE_LIMITS['video']})
üìÑ {VIP_LIMITS['documents']} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (+{VIP_LIMITS['documents'] - FREE_LIMITS['documents']})

üì¢ **–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –æ–±–∞ –∫–∞–Ω–∞–ª–∞ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!**"""

        await message.answer(text, reply_markup=await get_subscription_menu(user_id), parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
@dp.message(F.text == "üí¨ –ß–∞—Ç —Å Artemius")
async def chat_handler(message: types.Message, state: FSMContext):
    """–ß–∞—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ª–∏–º–∏—Ç–æ–≤"""
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    if not await check_limit(user_id, 'chat'):
        await show_limit_exhausted(message, 'chat')
        return

    await state.set_state(BotStates.waiting_for_text)
    daily = get_daily_usage(user_id)
    limits = VIP_LIMITS if is_vip else FREE_LIMITS
    remaining = limits['chat'] - daily['chat']

    status = "VIP" if is_vip else "–ë–∞–∑–æ–≤—ã–π"

    await message.answer(
        f"üèõÔ∏è **Artemius –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É!**\n\n"
        f"‚≠ê **–°—Ç–∞—Ç—É—Å:** {status} –¥–æ—Å—Ç—É–ø\n"
        f"üí° **–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π:** {remaining}\n\n"
        f"üß† –ó–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî —è –ø–æ–º–æ–≥—É —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º, —Ä–µ—à–µ–Ω–∏–µ–º –∑–∞–¥–∞—á –∏ –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º!",
        reply_markup=get_back_menu(),
        parse_mode="Markdown"
    )

@dp.message(F.text == "üé® –°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É")
async def image_handler(message: types.Message, state: FSMContext):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ª–∏–º–∏—Ç–æ–≤"""
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    if not await check_limit(user_id, 'images'):
        await show_limit_exhausted(message, 'images')
        return

    await state.set_state(BotStates.waiting_for_image_prompt)
    daily = get_daily_usage(user_id)
    limits = VIP_LIMITS if is_vip else FREE_LIMITS
    remaining = limits['images'] - daily['images']

    status = "VIP" if is_vip else "–ë–∞–∑–æ–≤—ã–π"

    await message.answer(
        f"üé® **Artemius Art Studio –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**\n\n"
        f"‚≠ê **–°—Ç–∞—Ç—É—Å:** {status} –¥–æ—Å—Ç—É–ø\n"
        f"üí° **–û—Å—Ç–∞–ª–æ—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:** {remaining}\n\n"
        f"üñºÔ∏è **–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:**\n"
        f"‚Ä¢ –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ª–µ—Å —Å –≤–æ–ª—à–µ–±–Ω—ã–º–∏ —Å–æ–∑–¥–∞–Ω–∏—è–º–∏\n"
        f"‚Ä¢ –ö–∏–±–µ—Ä–ø–∞–Ω–∫ –≥–æ—Ä–æ–¥ —Å –Ω–µ–æ–Ω–æ–≤—ã–º–∏ –æ–≥–Ω—è–º–∏\n"
        f"‚Ä¢ –ü–æ—Ä—Ç—Ä–µ—Ç —ç–ª—å—Ñ–∞ –≤ —Å—Ç–∏–ª–µ —Ñ—ç–Ω—Ç–µ–∑–∏\n"
        f"‚Ä¢ –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å —Å—Ä–µ–¥–∏ –∑–≤–µ–∑–¥\n\n"
        f"–û–ø–∏—à–∏—Ç–µ —á—Ç–æ —Å–æ–∑–¥–∞—Ç—å:",
        reply_markup=get_back_menu(),
        parse_mode="Markdown"
    )

@dp.message(F.text == "üéµ –°–æ–∑–¥–∞—Ç—å –ø–µ—Å–Ω—é")
async def music_handler(message: types.Message, state: FSMContext):
    """–°–æ–∑–¥–∞–Ω–∏–µ –º—É–∑—ã–∫–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ª–∏–º–∏—Ç–æ–≤"""
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    if not await check_limit(user_id, 'music'):
        await show_limit_exhausted(message, 'music')
        return

    await state.set_state(BotStates.waiting_for_music_prompt)
    daily = get_daily_usage(user_id)
    limits = VIP_LIMITS if is_vip else FREE_LIMITS
    remaining = limits['music'] - daily['music']

    status = "VIP" if is_vip else "–ë–∞–∑–æ–≤—ã–π"

    await message.answer(
        f"üéµ **Artemius Music Composer –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**\n\n"
        f"‚≠ê **–°—Ç–∞—Ç—É—Å:** {status} –¥–æ—Å—Ç—É–ø\n"
        f"üí° **–û—Å—Ç–∞–ª–æ—Å—å –∫–æ–º–ø–æ–∑–∏—Ü–∏–π:** {remaining}\n\n"
        f"üéº **–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:**\n"
        f"‚Ä¢ –≠–ø–∏—á–Ω–∞—è –æ—Ä–∫–µ—Å—Ç—Ä–æ–≤–∞—è –º—É–∑—ã–∫–∞ –¥–ª—è —Ñ–∏–ª—å–º–∞\n"
        f"‚Ä¢ –†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –¥–∂–∞–∑ –¥–ª—è —Ä–∞–±–æ—Ç—ã\n"
        f"‚Ä¢ –≠–Ω–µ—Ä–≥–∏—á–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –º—É–∑—ã–∫–∞ –¥–ª—è —Å–ø–æ—Ä—Ç–∞\n"
        f"‚Ä¢ –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –º–µ–ª–æ–¥–∏—è —Å –ø–∏–∞–Ω–∏–Ω–æ\n\n"
        f"–û–ø–∏—à–∏—Ç–µ –∫–∞–∫—É—é –º—É–∑—ã–∫—É —Å–æ–∑–¥–∞—Ç—å:",
        reply_markup=get_back_menu(),
        parse_mode="Markdown"
    )

@dp.message(F.text == "üé¨ –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ")
async def video_handler(message: types.Message, state: FSMContext):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ª–∏–º–∏—Ç–æ–≤"""
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    if not await check_limit(user_id, 'video'):
        await show_limit_exhausted(message, 'video')
        return

    await state.set_state(BotStates.waiting_for_video_prompt)
    daily = get_daily_usage(user_id)
    limits = VIP_LIMITS if is_vip else FREE_LIMITS
    remaining = limits['video'] - daily['video']

    status = "VIP" if is_vip else "–ë–∞–∑–æ–≤—ã–π"

    await message.answer(
        f"üé¨ **Artemius Video Producer –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**\n\n"
        f"‚≠ê **–°—Ç–∞—Ç—É—Å:** {status} –¥–æ—Å—Ç—É–ø\n"
        f"üí° **–û—Å—Ç–∞–ª–æ—Å—å –≤–∏–¥–µ–æ:** {remaining}\n\n"
        f"üé• **–î–æ—Å—Ç—É–ø–Ω—ã–µ AI —Å–µ—Ä–≤–∏—Å—ã:**\n"
        f"üåä **Veo 3** ‚Äî —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å—Ü–µ–Ω—ã –ø—Ä–∏—Ä–æ–¥—ã\n"
        f"ü§ñ **Kling AI** ‚Äî –±—ã—Å—Ç—Ä–∞—è HD –≥–µ–Ω–µ—Ä–∞—Ü–∏—è\n"
        f"üß° **Hailuo 02** ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã\n"
        f"üê∞ **Pika 2.2** ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n\n"
        f"üì± **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:** HD (720p-1080p) ‚Ä¢ 5-10 —Å–µ–∫\n\n"
        f"–û–ø–∏—à–∏—Ç–µ –∫–∞–∫–æ–µ –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞—Ç—å:",
        reply_markup=get_back_menu(),
        parse_mode="Markdown"
    )

@dp.message(F.text == "üìÑ –î–æ–∫—É–º–µ–Ω—Ç")
async def document_handler(message: types.Message, state: FSMContext):
    """–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ª–∏–º–∏—Ç–æ–≤"""
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    if not await check_limit(user_id, 'documents'):
        await show_limit_exhausted(message, 'documents')
        return

    await state.set_state(BotStates.waiting_for_document)
    daily = get_daily_usage(user_id)
    limits = VIP_LIMITS if is_vip else FREE_LIMITS
    remaining = limits['documents'] - daily['documents']

    status = "VIP" if is_vip else "–ë–∞–∑–æ–≤—ã–π"

    await message.answer(
        f"üìÑ **Artemius Document Analyzer –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**\n\n"
        f"‚≠ê **–°—Ç–∞—Ç—É—Å:** {status} –¥–æ—Å—Ç—É–ø\n"
        f"üí° **–û—Å—Ç–∞–ª–æ—Å—å –∞–Ω–∞–ª–∏–∑–æ–≤:** {remaining}\n\n"
        f"üîç **Artemius —É–º–µ–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å:**\n"
        f"‚Ä¢ –°–∫–∞–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Å–ø—Ä–∞–≤–æ–∫\n"
        f"‚Ä¢ –†—É–∫–æ–ø–∏—Å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –∏ —Ç–µ–∫—Å—Ç—ã\n"
        f"‚Ä¢ –ß–µ–∫–∏, —Å—á–µ—Ç–∞ –∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏\n"
        f"‚Ä¢ –¢–∞–±–ª–∏—Ü—ã –∏ —Ñ–æ—Ä–º—ã\n\n"
        f"üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞:",
        reply_markup=get_back_menu(),
        parse_mode="Markdown"
    )

@dp.message(F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def profile_handler(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)
    stats = get_user_stats(user_id)
    daily = get_daily_usage(user_id)

    limits = VIP_LIMITS if is_vip else FREE_LIMITS

    if is_vip:
        status_title = "‚≠ê VIP –°–¢–ê–¢–£–° –ê–ö–¢–ò–í–ï–ù!"
        status_desc = "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª—ã!"
    else:
        status_title = "üîí –ë–ê–ó–û–í–´–ô –î–û–°–¢–£–ü"
        status_desc = "–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –¥–ª—è VIP —Å—Ç–∞—Ç—É—Å–∞!"

    profile_text = f"""üë§ **–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Artemius AI**

{status_title}
{status_desc}

üìä **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è:**
üí¨ –î–∏–∞–ª–æ–≥–∏: {daily['chat']}/{limits['chat']}
üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {daily['images']}/{limits['images']}  
üéµ –ú—É–∑—ã–∫–∞: {daily['music']}/{limits['music']}
üé¨ –í–∏–¥–µ–æ: {daily['video']}/{limits['video']}
üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: {daily['documents']}/{limits['documents']}

üìà **–í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ —Å Artemius:**
‚Ä¢ –î–∏–∞–ª–æ–≥–æ–≤: {stats['total_messages']:,}
‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {stats['total_images']:,}
‚Ä¢ –ö–æ–º–ø–æ–∑–∏—Ü–∏–π: {stats['total_music']:,}
‚Ä¢ –í–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤: {stats['total_videos']:,}
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {stats['total_documents']:,}

‚è∞ –õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 –ú–°–ö"""

    if not is_vip:
        profile_text += f"""

‚≠ê **–ü–û–õ–£–ß–ò–¢–ï VIP –°–¢–ê–¢–£–°:**
–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –æ–±–∞ –∫–∞–Ω–∞–ª–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ:

üí¨ {VIP_LIMITS['chat']} –¥–∏–∞–ª–æ–≥–æ–≤ (+{VIP_LIMITS['chat'] - FREE_LIMITS['chat']})
üé® {VIP_LIMITS['images']} –∫–∞—Ä—Ç–∏–Ω–æ–∫ (+{VIP_LIMITS['images'] - FREE_LIMITS['images']})
üéµ {VIP_LIMITS['music']} –∫–æ–º–ø–æ–∑–∏—Ü–∏–π (+{VIP_LIMITS['music'] - FREE_LIMITS['music']})
üé¨ {VIP_LIMITS['video']} –≤–∏–¥–µ–æ (+{VIP_LIMITS['video'] - FREE_LIMITS['video']})
üìÑ {VIP_LIMITS['documents']} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (+{VIP_LIMITS['documents'] - FREE_LIMITS['documents']})

üöÄ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã!"""

    reply_markup = None if is_vip else await get_subscription_menu(user_id)
    await message.answer(profile_text, reply_markup=reply_markup, parse_mode="Markdown")

@dp.message(F.text.in_(["‚≠ê VIP —Ä–µ–∂–∏–º", "üîí –ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø", "üì¢ –ü–æ–ª—É—á–∏—Ç—å VIP"]))
async def subscription_info_handler(message: types.Message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ VIP —Å—Ç–∞—Ç—É—Å–∞"""
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    if is_vip:
        await message.answer(
            f"‚≠ê **VIP –°–¢–ê–¢–£–° –£–ñ–ï –ê–ö–¢–ò–í–ï–ù!**\n\n"
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–∏—Ö –∫–∞–Ω–∞–ª–æ–≤!\n\n"
            f"üéØ **–í–∞—à–∏ VIP-–ª–∏–º–∏—Ç—ã:**\n"
            f"üí¨ {VIP_LIMITS['chat']} –¥–∏–∞–ª–æ–≥–æ–≤ –≤ –¥–µ–Ω—å\n"
            f"üé® {VIP_LIMITS['images']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å\n"
            f"üéµ {VIP_LIMITS['music']} –∫–æ–º–ø–æ–∑–∏—Ü–∏–π –≤ –¥–µ–Ω—å\n"
            f"üé¨ {VIP_LIMITS['video']} –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤ –≤ –¥–µ–Ω—å\n"
            f"üìÑ {VIP_LIMITS['documents']} –∞–Ω–∞–ª–∏–∑–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å\n\n"
            f"üèõÔ∏è –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ Artemius AI!",
            parse_mode="Markdown"
        )
    else:
        await message.answer(
            f"‚≠ê **–ö–ê–ö –ü–û–õ–£–ß–ò–¢–¨ VIP –°–¢–ê–¢–£–°?**\n\n"
            f"üì¢ **–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –û–ë–ê –Ω–∞—à–∏—Ö –∫–∞–Ω–∞–ª–∞:**\n\n"
            + "\n".join([f"‚Ä¢ {ch['name']} ‚Äî {ch['description']}" for ch in REQUIRED_CHANNELS]) +
            f"\n\nüöÄ **–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:**\n\n"
            f"**–°–ï–ô–ß–ê–° (–±–∞–∑–æ–≤—ã–π):**\n"
            f"üí¨ {FREE_LIMITS['chat']} –¥–∏–∞–ª–æ–≥–æ–≤ –≤ –¥–µ–Ω—å\n"
            f"üé® {FREE_LIMITS['images']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å\n"
            f"üéµ {FREE_LIMITS['music']} –∫–æ–º–ø–æ–∑–∏—Ü–∏–π –≤ –¥–µ–Ω—å\n"
            f"üé¨ {FREE_LIMITS['video']} –≤–∏–¥–µ–æ –≤ –¥–µ–Ω—å\n"
            f"üìÑ {FREE_LIMITS['documents']} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å\n\n"
            f"**–ü–û–°–õ–ï –ü–û–î–ü–ò–°–ö–ò (VIP):**\n"
            f"üí¨ **{VIP_LIMITS['chat']} –¥–∏–∞–ª–æ–≥–æ–≤** (+{VIP_LIMITS['chat'] - FREE_LIMITS['chat']})\n"
            f"üé® **{VIP_LIMITS['images']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π** (+{VIP_LIMITS['images'] - FREE_LIMITS['images']})\n"
            f"üéµ **{VIP_LIMITS['music']} –∫–æ–º–ø–æ–∑–∏—Ü–∏–π** (+{VIP_LIMITS['music'] - FREE_LIMITS['music']})\n"
            f"üé¨ **{VIP_LIMITS['video']} –≤–∏–¥–µ–æ** (+{VIP_LIMITS['video'] - FREE_LIMITS['video']})\n"
            f"üìÑ **{VIP_LIMITS['documents']} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤** (+{VIP_LIMITS['documents'] - FREE_LIMITS['documents']})\n\n"
            f"‚≠ê **–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!**",
            reply_markup=await get_subscription_menu(user_id),
            parse_mode="Markdown"
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–±–µ–∫–æ–≤
@dp.callback_query(F.data == "separator")
async def separator_callback(callback: types.CallbackQuery):
    """–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å"""
    await callback.answer()

@dp.callback_query(F.data == "check_subscriptions")
async def check_subscriptions_callback(callback: types.CallbackQuery):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await callback.answer("üîÑ –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–ø–∏—Å–∫–∏...")
    user_id = callback.from_user.id

    # –û—á–∏—â–∞–µ–º –∫—ç—à –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    if user_id in subscription_cache:
        del subscription_cache[user_id]

    is_vip = await check_subscription(user_id)
    individual_subs = await check_individual_subscriptions(user_id)

    if is_vip:
        await callback.message.answer(
            f"‚úÖ **–ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! VIP –°–¢–ê–¢–£–° –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!**\n\n"
            f"üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –æ–±–∞ –∫–∞–Ω–∞–ª–∞!\n\n"
            f"‚≠ê **–í–∞—à–∏ –Ω–æ–≤—ã–µ VIP-–ª–∏–º–∏—Ç—ã:**\n"
            f"üí¨ {VIP_LIMITS['chat']} –¥–∏–∞–ª–æ–≥–æ–≤ –≤ –¥–µ–Ω—å\n"
            f"üé® {VIP_LIMITS['images']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å\n"
            f"üéµ {VIP_LIMITS['music']} –∫–æ–º–ø–æ–∑–∏—Ü–∏–π –≤ –¥–µ–Ω—å\n"
            f"üé¨ {VIP_LIMITS['video']} –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤ –≤ –¥–µ–Ω—å\n"
            f"üìÑ {VIP_LIMITS['documents']} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å\n\n"
            f"üöÄ –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º Artemius AI!",
            reply_markup=await get_main_menu(user_id),
            parse_mode="Markdown"
        )
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏–µ –∫–∞–Ω–∞–ª—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã, –∫–∞–∫–∏–µ –Ω–µ—Ç
        subscribed_channels = []
        missing_channels = []

        for channel in REQUIRED_CHANNELS:
            if individual_subs.get(channel["id"], False):
                subscribed_channels.append(f"‚úÖ {channel['name']}")
            else:
                missing_channels.append(f"‚ùå {channel['name']}")

        status_text = "\n".join(subscribed_channels + missing_channels)

        if missing_channels:
            await callback.message.answer(
                f"‚ùå **VIP —Å—Ç–∞—Ç—É—Å –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω**\n\n"
                f"üìä **–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–æ–∫:**\n"
                f"{status_text}\n\n"
                f"üì¢ **–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è VIP –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –í–°–ï –∫–∞–Ω–∞–ª—ã!**\n\n"
                f"üîç –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã:\n"
                f"‚Ä¢ –ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã\n"
                f"‚Ä¢ –ù–ï –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∫–∞–Ω–∞–ª—ã\n"
                f"‚Ä¢ –ü–æ–¥–æ–∂–¥–∞–ª–∏ 1-2 –º–∏–Ω—É—Ç—ã –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏\n\n"
                f"üîÑ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!",
                reply_markup=await get_subscription_menu(user_id),
                parse_mode="Markdown"
            )
        else:
            await callback.message.answer(
                f"‚è≥ **–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏...**\n\n"
                f"–í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –º–∏–Ω—É—Ç—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞.\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 30-60 —Å–µ–∫—É–Ω–¥.",
                reply_markup=await get_subscription_menu(user_id),
                parse_mode="Markdown"
            )

@dp.callback_query(F.data == "skip_subscriptions")
async def skip_subscriptions_callback(callback: types.CallbackQuery):
    """–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (–ø–æ–∫–∞ —á—Ç–æ)"""
    await callback.answer()
    user_id = callback.from_user.id

    await callback.message.answer(
        f"üîí **–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–µ–Ω**\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏:\n\n"
        f"üí¨ {FREE_LIMITS['chat']} –¥–∏–∞–ª–æ–≥–æ–≤ –≤ –¥–µ–Ω—å\n"
        f"üé® {FREE_LIMITS['images']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å\n"
        f"üéµ {FREE_LIMITS['music']} –∫–æ–º–ø–æ–∑–∏—Ü–∏–π –≤ –¥–µ–Ω—å\n"
        f"üé¨ {FREE_LIMITS['video']} –≤–∏–¥–µ–æ –≤ –¥–µ–Ω—å\n"
        f"üìÑ {FREE_LIMITS['documents']} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å\n\n"
        f"‚≠ê **–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å VIP**, –ø–æ–¥–ø–∏—Å–∞–≤—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã!",
        reply_markup=await get_main_menu(user_id),
        parse_mode="Markdown"
    )

@dp.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def main_menu_handler(message: types.Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await state.clear()
    user_id = message.from_user.id
    is_vip = await check_subscription(user_id)

    status = "VIP —Ä–µ–∂–∏–º" if is_vip else "–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø"

    await message.answer(
        f"üèõÔ∏è **Artemius AI ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n‚≠ê **–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:** {status}", 
        reply_markup=await get_main_menu(user_id),
        parse_mode="Markdown"
    )

# AI –§–£–ù–ö–¶–ò–ò (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
async def chat_with_ai(prompt: str, user_id: int) -> str:
    """–ß–∞—Ç —Å AI"""
    try:
        use_feature(user_id, 'chat')
        return f"üèõÔ∏è **Artemius AI –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç:** \"{prompt}\"\n\nüí° –ü–æ–ª—É—á–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å! –í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é DeepSeek V3 –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã."
    except Exception as e:
        return f"‚ùå Artemius –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {str(e)}"

async def generate_image(prompt: str, user_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–∑–∞–≥–ª—É—à–∫–∞)"""
    try:
        use_feature(user_id, 'images')
        return f"üé® **Artemius —Å–æ–∑–¥–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:** \"{prompt}\"\n\n‚ö° –í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é Stable Diffusion XL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –≤–∞—à–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é!"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}"

async def generate_music(prompt: str, user_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º—É–∑—ã–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞)"""
    try:
        use_feature(user_id, 'music')
        return f"üéµ **Artemius –∫–æ–º–ø–æ–Ω—É–µ—Ç –º—É–∑—ã–∫—É:** \"{prompt}\"\n\nüéº –í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é MusicGen –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–∑–∏—Ü–∏–π –≤ –ª—é–±–æ–º –∂–∞–Ω—Ä–µ!"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º—É–∑—ã–∫–∏: {str(e)}"

async def generate_video(prompt: str, user_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ (–∑–∞–≥–ª—É—à–∫–∞)"""
    try:
        use_feature(user_id, 'video')
        return f"""üé¨ **Artemius Video Studio**

üìù **–°–æ–∑–¥–∞–µ—Ç—Å—è –≤–∏–¥–µ–æ:** {prompt}

‚ö° **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
‚Ä¢ AI: Veo 3, Kling AI, Pika 2.2
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ: HD (720p-1080p)
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 5-10 —Å–µ–∫—É–Ω–¥

üîÑ **–°—Ç–∞—Ç—É—Å:** –ì–µ–Ω–µ—Ä–∞—Ü–∏—è...
‚è±Ô∏è **–í—Ä–µ–º—è:** 2-5 –º–∏–Ω—É—Ç

üí° –í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ video API!"""
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –≤–∏–¥–µ–æ: {str(e)}"

async def analyze_document(user_id: int) -> str:
    """–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)"""
    try:
        use_feature(user_id, 'documents')
        return f"""üìÑ **Artemius Document Analysis**

‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!

üîç **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**
‚Ä¢ Microsoft TrOCR –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
‚Ä¢ –ù–µ–π—Ä–æ—Å–µ—Ç–µ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑

üí° –í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏: —Ç–æ—á–Ω–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ª—é–±—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –ø–µ—Ä–µ–≤–æ–¥—ã, –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é!"""
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ OCR: {str(e)}"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
@dp.message(StateFilter(BotStates.waiting_for_text))
async def process_chat_message(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    if not await check_limit(user_id, 'chat'):
        await show_limit_exhausted(message, 'chat')
        return

    await bot.send_chat_action(message.chat.id, "typing")
    processing_msg = await message.answer("üèõÔ∏è Artemius –¥—É–º–∞–µ—Ç...")

    response = await chat_with_ai(message.text, user_id)
    await processing_msg.delete()
    await message.answer(response, parse_mode="Markdown")

@dp.message(StateFilter(BotStates.waiting_for_image_prompt))
async def process_image_generation(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    if not await check_limit(user_id, 'images'):
        await show_limit_exhausted(message, 'images')
        return

    await bot.send_chat_action(message.chat.id, "upload_photo")
    processing_msg = await message.answer("üé® Artemius —Å–æ–∑–¥–∞—ë—Ç...")

    response = await generate_image(message.text, user_id)
    await processing_msg.delete()
    await message.answer(response, parse_mode="Markdown")

@dp.message(StateFilter(BotStates.waiting_for_music_prompt))
async def process_music_generation(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    if not await check_limit(user_id, 'music'):
        await show_limit_exhausted(message, 'music')
        return

    await bot.send_chat_action(message.chat.id, "upload_document")
    processing_msg = await message.answer("üéµ Artemius –∫–æ–º–ø–æ–Ω—É–µ—Ç...")

    response = await generate_music(message.text, user_id)
    await processing_msg.delete()
    await message.answer(response, parse_mode="Markdown")

@dp.message(StateFilter(BotStates.waiting_for_video_prompt))
async def process_video_generation(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    if not await check_limit(user_id, 'video'):
        await show_limit_exhausted(message, 'video')
        return

    await bot.send_chat_action(message.chat.id, "upload_video")
    processing_msg = await message.answer("üé¨ Artemius —Å–æ–∑–¥–∞—ë—Ç –≤–∏–¥–µ–æ...")

    response = await generate_video(message.text, user_id)
    await processing_msg.delete()
    await message.answer(response, parse_mode="Markdown")

@dp.message(StateFilter(BotStates.waiting_for_document), F.photo)
async def process_document_photo(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    if not await check_limit(user_id, 'documents'):
        await show_limit_exhausted(message, 'documents')
        return

    await bot.send_chat_action(message.chat.id, "typing")
    processing_msg = await message.answer("üìÑ Artemius —Å–∫–∞–Ω–∏—Ä—É–µ—Ç...")

    response = await analyze_document(user_id)
    await processing_msg.delete()
    await message.answer(response, parse_mode="Markdown")

@dp.message()
async def handle_unknown_message(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = message.from_user.id
    await message.answer(
        f"ü§î **Artemius –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É**\n\n"
        f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏",
        reply_markup=await get_main_menu(user_id),
        parse_mode="Markdown"
    )

# –ó–∞–ø—É—Å–∫ Artemius
async def main():
    """–ó–∞–ø—É—Å–∫ Artemius —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –ø–æ–¥–ø–∏—Å–æ–∫"""
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        logger.info("üèõÔ∏è ARTEMIUS AI BOT - –ó–ê–ü–£–©–ï–ù –° –ö–ê–ù–ê–õ–ê–ú–ò @kanal1kkal –∏ @kanal2kkal!")
        logger.info(f"üì¢ VIP —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞: {[ch['id'] for ch in REQUIRED_CHANNELS]}")

        print("üèõÔ∏è ===== ARTEMIUS AI - –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï =====")
        print(f"üì¢ VIP –∫–∞–Ω–∞–ª—ã: @kanal1kkal –∏ @kanal2kkal")
        print(f"üîí –ë–∞–∑–æ–≤—ã–µ –ª–∏–º–∏—Ç—ã: {FREE_LIMITS}")
        print(f"‚≠ê VIP –ª–∏–º–∏—Ç—ã: {VIP_LIMITS}")
        print("üí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!")

        await dp.start_polling(bot)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüõë Artemius AI Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
